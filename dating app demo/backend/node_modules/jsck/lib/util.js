// Generated by CoffeeScript 1.7.1
var Context, Runtime;

module.exports = {
  escape: function(string) {
    return string.replace(/~0/g, "~").replace(/~1/g, "/").replace(/%25/g, "%");
  },
  Runtime: Runtime = (function() {
    function Runtime(_arg) {
      this.errors = _arg.errors, this.pointer = _arg.pointer;
    }

    Runtime.prototype.child = function(token) {
      return new this.constructor({
        errors: this.errors,
        pointer: "" + this.pointer + "/" + (token.toString())
      });
    };

    Runtime.prototype.error = function(context, value) {
      return this.errors.push({
        schema: {
          pointer: context.pointer,
          attribute: context._attribute,
          definition: context.definition
        },
        document: {
          pointer: this.pointer,
          value: value
        }
      });
    };

    return Runtime;

  })(),
  Context: Context = (function() {
    function Context(_arg) {
      this.pointer = _arg.pointer, this.scope = _arg.scope, this._attribute = _arg._attribute;
    }

    Context.prototype.attribute = function(name) {
      return new Context({
        pointer: "" + this.pointer + "/" + (name.toString()),
        scope: this.scope,
        _attribute: name
      });
    };

    Context.prototype.child = function(token) {
      return new Context({
        pointer: "" + this.pointer + "/" + (token.toString()),
        scope: this.scope,
        _attribute: this._attribute
      });
    };

    Context.prototype.sibling = function(token) {
      var pointer;
      pointer = this.pointer.replace(/\/.*$/, "/" + (token.toString()));
      return new Context({
        pointer: pointer,
        scope: this.scope
      });
    };

    return Context;

  })()
};
